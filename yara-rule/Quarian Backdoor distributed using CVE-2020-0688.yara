import "pe"

rule apt_CloudComputating_PlugX_dropper: CloudComputating {
	meta:
		author		= "afta Lab"
		copyright	= "afta Lab"
		distribution = "DISTRIBUTION IS FORBIDDEN. DO NOT UPLOAD TO ANY MULTISCANNER OR SHARE ON ANY THREAT INTEL PLATFORM"
		report = "Quarian Backdoor distributed using CVE-2020-0688"
		type          	= "APT"
	    filetype      	= "EXE"
	    version       	= "1.0"
	    date 		= "2020-04-06"
	    last_modified 	= "2020-04-06"
	    description 	= "Rule for detecting the downloader of PlugX from a CloudComputating campaign"
	    hash 		= "8D6737D573EF70B47FD39A4C5A552E0F"
	    version 	= "1.0"

	strings:
		$a1 = "document/export?format=txt&id=%s&includes_info_params=true" wide
		$a2 = "15jCl6il4Ev3JcNQku1MeT2Wt6ugoKLPNRd12tuguSS0" wide

		$b1 = "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36" wide
		$b2 = "docs.google.com" wide fullword
		$b3 = "mapistub.dll" ascii fullword
		$b4 = "FixMAPI" ascii fullword
		$b6 = "FMTERR" wide fullword

 	condition:
		uint16(0) == 0x5A4D and
		(filesize < 200KB) and
		pe.imphash() == "b3e7dec0e71232c2fea01c352262ae17"
		and (any of ($a*) or 4 of ($b*))
}

rule apt_CloudComputating_RealLoad: CloudComputating {
	meta:
		author		= "afta Lab"
		copyright	= "afta Lab"
		distribution = "DISTRIBUTION IS FORBIDDEN. DO NOT UPLOAD TO ANY MULTISCANNER OR SHARE ON ANY THREAT INTEL PLATFORM"
		report = "Quarian Backdoor distributed using CVE-2020-0688"
		type          	= "APT"
	    filetype      	= "EXE"
	    filetype      	= "DLL"
	    version       	= "1.0"
	    date 		= "2020-04-06"
	    last_modified 	= "2020-04-06"
	    description 	= "Rule to detect Real Load packer"
	    hash 		= "B468B88CB3433CF18F74285A7B212D6A"
	    hash 		= "A26588F7902E9C6A2A693D63CA075D7F"
	    hash 		= "5D8F0EAA4D1AF53C15E9456186117EA9"
	    hash 		= "4B23A746B92DFDB1204B8266AB5D2A46"
	    version 	= "1.0"
	
	strings:
	
		$a1 = {FF EE DD CC 11 22 33 44 ?? ?? ?? 00}
		$a2 = "blueblueblueblueblueblueblueblue" ascii
		$a3 = "_real_load_dll.pdb"

	condition:
		uint16(0) == 0x5A4D and
		(filesize > 10000) and (filesize < 2000000) and
		2 of ($a*)
}

rule apt_CloudComputating_QuarianBackdoorackdoor: CloudComputating {
	meta:
		author		= "afta Lab"
		copyright	= "afta Lab"
		distribution = "DISTRIBUTION IS FORBIDDEN. DO NOT UPLOAD TO ANY MULTISCANNER OR SHARE ON ANY THREAT INTEL PLATFORM"
		report = "Quarian Backdoor distributed using CVE-2020-0688"
		type          	= "APT"
	    filetype      	= "EXE"
	    filetype      	= "DLL"
	    version       	= "1.0"
	    date 		= "2020-04-06"
	    last_modified 	= "2020-04-06"
	    description 	= "Rule to detect Quarian backdoor used in CloudComputating campaign"
	    hash 		= "BD757890C30183ACA65B6F5A1E8B707B"
	    hash 		= "93DE9D05D1A0F2A63F9D7CEAD2FDDBA4"
	    hash 		= "7C17D5385341318F88F447287809112F"
	    hash 		= "D147A61CA23942E35FD7174C1B6C0ABA"
	    hash 		= "78DB086C676FB2D803D4A83E2A8D14A7"
	    version 	= "1.0"

	strings:
		$a1 = "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)" wide ascii
		$a2 = "http=@ProxyServer@ProxyEnable@\\Software\\Microsoft" wide ascii
		
		$b1 = "\\alg.exe" wide ascii
		$b2 = "\\acrobat17.exe" wide ascii
		$b3 = "sharedaccess.ini" wide ascii
		$b4 = "the.db" wide ascii
		$b5 = "ComSpec" wide ascii nocase

	condition:
		uint16(0) == 0x5A4D and
		(filesize > 10000) and (filesize < 200000) and
		any of ($a*) and 3 of ($b*)
}
